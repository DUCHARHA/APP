// Cache killing utilities for development

export function clearAllCaches(): Promise<void> {
  return new Promise((resolve) => {
    if ('caches' in window) {
      caches.keys().then(cacheNames => {
        Promise.all(
          cacheNames.map(cacheName => {
            console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫—ç—à:', cacheName);
            return caches.delete(cacheName);
          })
        ).then(() => {
          console.log('‚úÖ –í—Å–µ –∫—ç—à–∏ –æ—á–∏—â–µ–Ω—ã');
          resolve();
        }).catch(() => resolve());
      }).catch(() => resolve());
    } else {
      resolve();
    }
  });
}

export function unregisterAllServiceWorkers(): Promise<void> {
  return new Promise((resolve) => {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.getRegistrations().then(registrations => {
        Promise.all(
          registrations.map(registration => {
            console.log('üóëÔ∏è –û—Ç–∫–ª—é—á–∞–µ–º Service Worker:', registration.scope);
            return registration.unregister();
          })
        ).then(() => {
          console.log('‚úÖ –í—Å–µ Service Worker –æ—Ç–∫–ª—é—á–µ–Ω—ã');
          resolve();
        }).catch(() => resolve());
      }).catch(() => resolve());
    } else {
      resolve();
    }
  });
}

export function forceReload(): void {
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞
  if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {
    navigator.serviceWorker.controller.postMessage({ type: 'FORCE_UPDATE' });
  }
  
  // –û—á–∏—â–∞–µ–º localStorage –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const currentVersion = Date.now();
  localStorage.setItem('app-version', currentVersion.toString());
  
  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ–±—Ö–æ–¥–æ–º –∫—ç—à–∞
  window.location.reload();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
export function checkAppVersion(): boolean {
  const APP_VERSION = '1.0.0'; // –û–±–Ω–æ–≤–ª—è–π—Ç–µ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
  const storedVersion = localStorage.getItem('app-version');
  
  if (!storedVersion || storedVersion !== APP_VERSION) {
    localStorage.setItem('app-version', APP_VERSION);
    return true; // –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  }
  
  return false;
}