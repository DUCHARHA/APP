
// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –¥–µ—Ç–µ–∫—Ü–∏–∏ PWA –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

export class PWADetector {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ PWA
  static isRunningAsPWA(): boolean {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ standalone —Ä–µ–∂–∏–º–∞
    const isStandalone = window.matchMedia('(display-mode: standalone)').matches;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è iOS Safari
    const isIOSStandalone = (window.navigator as any).standalone === true;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É URL (–∏–∑ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞)
    const hasA2HSParam = new URLSearchParams(window.location.search).get('source') === 'a2hs';
    
    return isStandalone || isIOSStandalone || hasA2HSParam;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É PWA –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  static isPWASupported(): boolean {
    return 'serviceWorker' in navigator && 'PushManager' in window;
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  static getBrowserInfo(): string {
    const ua = navigator.userAgent;
    
    if (ua.includes('Chrome') && !ua.includes('Edg')) return 'chrome';
    if (ua.includes('Firefox')) return 'firefox';
    if (ua.includes('Safari') && !ua.includes('Chrome')) return 'safari';
    if (ua.includes('Edg')) return 'edge';
    
    return 'unknown';
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  static shouldShowInstallPrompt(): boolean {
    return !this.isRunningAsPWA() && this.isPWASupported();
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ PWA –ø—Ä–æ–±–ª–µ–º
  static debugPWAStatus(): void {
    console.log('üîç PWA Debug Info:', {
      isRunningAsPWA: this.isRunningAsPWA(),
      isPWASupported: this.isPWASupported(),
      browser: this.getBrowserInfo(),
      displayMode: this.getDisplayMode(),
      hasServiceWorker: 'serviceWorker' in navigator,
      userAgent: navigator.userAgent
    });
  }

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  private static getDisplayMode(): string {
    if (window.matchMedia('(display-mode: standalone)').matches) return 'standalone';
    if (window.matchMedia('(display-mode: minimal-ui)').matches) return 'minimal-ui';
    if (window.matchMedia('(display-mode: fullscreen)').matches) return 'fullscreen';
    return 'browser';
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (typeof window !== 'undefined' && process.env.NODE_ENV === 'development') {
  PWADetector.debugPWAStatus();
}
